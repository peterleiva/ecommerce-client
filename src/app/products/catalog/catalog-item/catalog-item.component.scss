@use '~breakpoint-sass/stylesheets/breakpoint' as *;
@use 'utilities' as utils;

$border-radius: utils.rhythm-baseline-scale(.7);
$price-color: utils.color-pick(success);
$border-grid-radius: utils.rem(7);
$animation-duration: .4s;

:host {
  position: relative;

  .cover img {
    width: 100%;
  }

  // bottom border when hover
  &::after {
    content: "";
    display: inline-block;
    width: 30%;
    background: $price-color;
    height: utils.rem(2);
    text-align: center;
    position: absolute;
    left: 35%;
    bottom: 0;
    @include utils.opacity(hidden);
    transform: translateX(-100%);
  }

  &:hover {
    &::after {
      @include utils.opacity(active);
      transform: translate(0, 0);
      transition: all .6s;
    }

    transition: box-shadow 1s;
  }

  .actions {

    .action {
      color: utils.color-gray(light);
      background: utils.color-gray(light);

      &:hover {
        color: utils.color-gray(light);
        transition: all $animation-duration;

        @include utils.color-apply-colors using ($color) {
          &.action-#{$color} {
            background: utils.color-pick($color, $opacity: light);
          }
        }
      }
    }
  }

  .product {
    > .details {

      > .title {
        &:hover {
          color: $price-color;
          transition: color .4s;
        }
      }
    }

  }

  &.list {
    $border-radius: utils.rem(7);

    display: flex;
    box-shadow: 0 0 utils.rem(8) 0 utils.$color-shadow;
    border-radius: $border-radius;

    .product {
      @include utils.rhythm-padding(.5);
      display: flex;
      flex-direction: row-reverse;
      align-items: center;
      border-left: utils.rem(1) solid utils.$color-shadow;

      .cover {
        flex-shrink: 1;

        @include breakpoint(utils.breakpoints(bulldog)) {
          flex-shrink: 16;
        }
      }

      .details {
        @include utils.rhythm-padding(0 1);

        > .price {
          margin-top: utils.rhythm-baseline-scale(1);
        }
      }
    }

    .actions {
      display: flex;
      flex-direction: column;
      @include utils.opacity(active);

      > .action {
        flex-grow: 1;
        @include utils.rhythm-padding(0 .5);

        &:not(:last-child) {
          border-bottom: utils.rem(1) solid utils.$color-shadow;
        }

        &:first-child {
          border-top-left-radius: $border-radius;
        }

        &:last-child {
          border-bottom-left-radius: $border-radius;
        }
      }
    }
  }

  &.grid {
    @include utils.rhythm-padding(1 0);

    &:hover {
      .actions {
        @include utils.opacity(active);
        top: 20%;
        transition: all .8s;
      }
    }

    .actions {
      @include utils.opacity(hidden);
      @include utils.z;
      position: absolute;
      top: 0;
      width: 100%;
      text-align: center;

      > .action {
        @include utils.rhythm-padding(.5 1);
        @include utils.rhythm-margin(0 1/10);

        $action-radius: utils.rem(10);

        &:first-child {
          border-top-left-radius: $action-radius;
          border-bottom-left-radius: $action-radius;
        }

        &:last-child {
          border-top-right-radius: $action-radius;
          border-bottom-right-radius: $action-radius;
        }

      }
    }

    .cover {
      position: relative;
    }

    .details {
      @include utils.rhythm-padding(.5 0);
      text-align: center;

      .price {
        @include utils.rhythm-margin(.5 0);
      }
    }
  }
}
